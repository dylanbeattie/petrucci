{ const Syntax = require('./syntax.js'); }

program = head:statement EOL+ tail:program { return [ head ].concat(tail) }
        / item:statement { return [ item ] }

statement = output
say = ('say'i / 'shout'i / 'whisper'i / 'scream'i);

output = say _ node:expression { return new Syntax.OutputNode(node) }

expression = number

number = digits:$[0-9]+ { return new  Syntax.NumberNode(parseInt(digits)) }

whitespace  = [ \t]
comment     = '(' [^)]* ')'
_           = (whitespace / comment)+
EOL = _ '\r'? '\n'

/*
// return = 'return' _ node:expression { return new Syntax.ReturnNode(node) }

sum = lhs:product _ "+" _ rhs:sum { return new Syntax.AdditionNode(lhs, rhs) }
     / product

product = lhs:primary _ "*" _ rhs:product { return new  Syntax.MultiplicationNode(lhs, rhs) }
        / primary

primary = number
        / "(" expr:expression ")" { return expr; }

*/